#!@PERL@
#eval "exec perl -S $0 $*"
#			if $running_under_some_shell;
#
# author: Matthias Schwab, 14Dec96
# changes: Sergey Fomel,   21Jan97 

$usage = "Usage: $0 [class=sep2e option=12pt style] file.tex > fileout.tex \n";
$selfdoc = "Adds certain standard latex statements (such as \\documentclass) 
to latex source file, file.tex (normally, paper.tex), and outputs the result to stdout. 

    -v --verbose      prints out status while processing 
    class=            LaTeX class
          sep2e       use SEP's LaTeX2e class 
          old         use SEP's LaTeX2.09 macros
    option=           additional options  (e.g. 11pt)
    style=            additional packages (e.g. jfc)                      
    include=          additional lines in the preamble
    bibstyle=         bibliography style
          sep         SEP, Geophysics
          eage        Geophysical Prospecting
                     
See also: Actify latex2dvi (based on former texpr)
";

# ---------- begin executable statements -------------------------
&getInvocationArguments; # get command line args
&setVariables;           # set global variables

$warning = "\% This texfile was generated by executing Latify on file $texfile\n";
$prefix = join ("\n",$documentclass,"\\begin{document}",$afterbegin,"");
$suffix = join ("\n","\\clearpage", $beforeend, "\\end{document}","") ;
$line = "\n" . ('-' x 44) . "\n"; 

print $warning;
print STDERR (join ($line,"Writing prefix:",$prefix,"\n")) if ($verbose);
print $prefix;
&printTexfile;
print STDERR (join ($line,"Writing suffix:",$suffix,"\n")) if ($verbose);
print $suffix; 

exit(0);
# ---------- end of executable code, begin subroutines ----------
# write the input file to stdout
sub printTexfile {
    print STDERR "Processing file $texfile\n" if ($verbose); 
    open (texfile) or die "Couldn't open file $texfile\n"; 
    while (<texfile>) {
	s/\\bibliographystyle\{[^\}]*/\\bibliographystyle\{$bibstyle/g;
	print;
    }
    close(texfile);
}

# --- set global string variables to be used in the prefix and suffix ---
sub setVariables {
    $documentclass = "\\documentclass";
    if ( $class eq "old" ) {
	$class = "article";
	$documentclass = "\\documentstyle";
	$option = "xtex,sepreport," . $option;
	$afterbegin    = "\\begin{bibunit}[sep]";
	$beforeend     = "\\end{bibunit}";               
    } 
    $documentclass .=  join ($option, "\[", "\]");
    $documentclass .=  join ($class, "\{", "\}");
    $documentclass .=  join ($style, "\n\\usepackage\{", "\}") if ($style);
    $documentclass .= "\n\\makeindex" if ($style =~ /makeidx/);
    $include =~ s/\\\,/\<\@\>/g;
    foreach (split (/\,/,$include)) {
	s/\<\@\>/\,/g;
	$documentclass .= "\n$_";
    }
}

# set flags based on the command-line arguments
sub getInvocationArguments { 
    die ($usage . $selfdoc) if ($#ARGV < 0);
    $texfile = pop (@ARGV);
    $texfile .= ".tex" unless ($texfile =~ /\.(tex|doc)$/); # supply suffix
    $class  = "sep2e"; # default
    $option  = "12pt"; # default
    $bibstyle = "sep"; # default
    foreach (@ARGV) {
	if (($_ eq "-v") || ($_ eq "--verbose")) {
	    $verbose = 1;
	} elsif ( s/^class=// ) {
	    $class = $_;            
	} elsif ( s/^option=// ) {
	    $option =~ s/(article|book|report)[\,]?// if (/(article|book|report)/);
	    $option =~ s/[\,]?12pt$// if (/(^|\,)\d\dpt/);
	    if ($option) {
		$option = join (',',$_,$option);  # prepend other options
	    } else {
		$option = $_;
	    }
	} elsif ( s/^style=// ) {
	    if ($style) {
		$style = join (',',$style,$_); # append other styles
	    } else {
		$style = $_;
	    }
	} elsif ( s/^bibstyle=// ) {
		$bibstyle = $_;
	} elsif ( s/^include=// ) {
	    if ($include) {
		$include = join (',',$include,$_); # append other includes
	    } else {
		$include = $_;
	    }
	} else {
	    die "Unrecognized switch: $_\n" . $usage;
	}
    }
}











